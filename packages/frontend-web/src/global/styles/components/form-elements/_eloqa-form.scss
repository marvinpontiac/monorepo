.elq-form {
  padding: calc(var(--size-spacing-base) * 3.75);

  @include container-above(tablet, in-page-form) {
    padding: var(--size-spacing-eloqa-form-padding);
  }

  input[type='text'],
  input[type='email'] {
    @extend %form-input;
    width: 100%;
  }

  label {
    display: block;
    margin-bottom: var(--size-spacing-base); // need to confirm
    color: var(--color-font-form-label);
    font: var(--font-form-label);

    html[lang="zh-cn"] & {
      font: var(--font-cn-form-label);
    }
  }

  li::marker {
    content: none;
  }

  li,
  .form-element-layout {
    margin-bottom: var(--size-spacing-eloqa-form-row-spacing);
  }

  .padded-container {
    padding-top: 0 !important;
  }

  .required {
    color: var(--color-font-error);
  }

  .LV_invalid {
    color: var(--color-font-error);
    margin-top: var(--size-spacing-base);
    display: block;
  }

  textarea {
    @extend %form-input;
    padding: var(--size-form-textarea-padding-x) var(--size-form-textarea-padding-y);
    width: 100%;
  }

  .row-one-radio-container {
    display: flex;
    justify-content: flex-start;
    flex-direction: row;
    gap: var(--size-spacing-eloqa-form-row-spacing);
    margin-bottom: var(--size-spacing-eloqa-form-row-spacing);
  }

  select {
    height: var(--size-form-select-min-height);
    min-height: var(--size-form-select-min-height);
    border: var(--size-border-small) solid var(--color-gray-dark64);
    border-radius: 0;
    background-color: var(--color-gray-light40);
    color: var(--color-font-form-label);
    font: var(--font-body-p5);
    font-weight: var(--font-weight-semibold);
    line-height: var(--size-font-line-height-4);
    padding-inline: var(--size-form-select-padding-x);
    text-transform: uppercase;
    min-width: rem-calc(250);

    html[lang="zh-cn"] & {
      font: var(--font-cn-body-p5);
      font-weight: var(--font-weight-semibold);
      line-height: var(--size-font-line-height-4);
    }

    @include respond-below(tablet) {
      width: 100%;
    }

    &:focus-visible {
      border-radius: 0;
      outline: var(--size-border-small) solid var(--color-border-focus-dark);
      outline-offset: 0;
    }

    &--light-background {
      background-color: var(--color-gray-light40);
    }

    &:hover {
      background-color: var(--color-interactive-cool-gray-hover);

      option {
        background-color: var(--color-gray-light40);
      }
    }
  }

  .btn-primary,
  input[type='button'],
  input[type='submit'] {
    --_background: var(--color-background-button-primary-default);
    --_backgroundHover: var(--color-background-button-primary-hover);
    --_color: var(--color-font-button-primary-default);
    --_colorHover: var(--color-font-button-primary-default);
    --_borderColor: transparent;
    --_icon: var(--color-background-button-primary);
    --_transform: uppercase;
    --_weight: var(--font-weight-bold);
    --_size: var(--size-font-button);
    --_letterSpacing: var(--size-font-letter-spacing-button);
    --_lineHeight: 1.33333333;

    @extend %button-hyperlinks;

    display: inline-flex;
    max-width: var(--size-width-button-max);
    align-items: center;
    justify-content: center;
    padding: 0 var(--size-spacing-small);
    border: var(--size-border-small) solid var(--_borderColor);
    background: var(--_background);
    color: var(--_color);
    cursor: pointer;
    gap: rem-calc(4);
    text-align: center;
    text-decoration: none;
    white-space: normal;
    margin-bottom: var(--size-spacing-eloqa-form-row-spacing);

    width: 100%;
    height: var(--size-height-button);
    text-transform: uppercase;

    &:focus-visible {
      outline: var(--size-border-small) solid var(--color-border-focus-dark);
    }

    &::after {
      content: '';
      transition: all 200ms ease;
      width: rem-calc(6);
      min-width: rem-calc(6);
      height: rem-calc(6);
      border-top: 2px solid currentColor;
      border-right: 2px solid currentColor;
      margin-left: rem-calc(2);
      transform: rotate(45deg);
    }

    &:hover {
      background: var(--_backgroundHover);
      color: var(--_colorHover);
    }

    :focus {
      outline: transparent;
    }

    &:focus-visible {
      --_backgroundHover: var(--_background);
      border-radius: 0;
      color: var(--_color);
      outline-offset: 0;
    }

    &[disabled],
    &[aria-disabled='true'] {
      --_backgroundHover: var(--_background);
    }

    .parent-link:hover &:not([disabled], .disabled)::after,
    &:not([disabled], .disabled):hover::after {
      transform: translateX(rem-calc(3)) rotate(45deg);
    }
  }

  .single-checkbox-row label {
    display: inline-block;
    margin: 0;
  }

  .LV_validation_message.LV_valid {
    display: none;
  }

  .checkbox-text {
    display: flex;
    align-items: center;

    input[type='checkbox'] {
      position: absolute;
      left: -99999px;
      overflow: hidden;
      width: 0;
      height: 0;

      &:focus {
        outline: transparent;
      }

      & + label::before {
        display: inline-block;
        width: rem-calc(18);
        height: rem-calc(18);
        box-sizing: border-box;
        border: var(--size-border-radio) solid var(--color-gray-light16);
        margin: 0 rem-calc(6) rem-calc(-3) 0;
        content: '';
      }

      & + label::after {
        --_backgroundColor: none;
        position: absolute;
        top: 0.35rem;
        left: 0.25rem;
        display: block;
        width: rem-calc(11);
        height: rem-calc(11);
        background: var(--_backgroundColor);
        clip-path: $clip-path-confirm;
        content: '';
      }

      & + label {
        margin-bottom: 0;
        position: relative;
        color: var(--color-font-form-label);
        font: var(--font-form-selection-label);
        text-transform: none;
        cursor: pointer;

        html[lang="zh-cn"] & {
          font: var(--font-cn-form-selection-label);
        }

        &:hover {
          &::after {
            top: 0.35rem;
            left: 0.21rem;
            background-color: var(--color-gray-light16);
            content: '';
            clip-path: none;
          }
        }
      }

      &:checked + label::after {
        --_backgroundColor: var(--color-form-checkmark-selected);
      }

      &:focus-visible + label::before {
        outline: var(--size-border-small) solid var(--color-border-focus-dark);
      }
    }
  }

  .field-field {
    select {
      width: 100%;
      min-width: unset;
      max-width: unset;
    }

    input[type='checkbox'] {
      position: absolute;
      left: -99999px;
      overflow: hidden;
      width: 0;
      height: 0;

      &:focus {
        outline: transparent;
      }

      & + label::before {
        display: inline-block;
        width: rem-calc(18);
        height: rem-calc(18);
        box-sizing: border-box;
        border: var(--size-border-radio) solid var(--color-gray-light16);
        margin: 0 rem-calc(6) rem-calc(-3) 0;
        content: '';
      }

      & + label::after {
        --_backgroundColor: none;
        position: absolute;
        top: 0.35rem;
        left: 0.25rem;
        display: block;
        width: rem-calc(11);
        height: rem-calc(11);
        background: var(--_backgroundColor);
        clip-path: $clip-path-confirm;
        content: '';
      }

      & + label {
        margin-bottom: 0;
        position: relative;
        color: var(--color-font-form-label);
        font: var(--font-form-selection-label);
        text-transform: none;
        cursor: pointer;

        html[lang="zh-cn"] & {
          font: var(--font-cn-form-selection-label);
        }

        &:hover {
          &::after {
            top: 0.35rem;
            left: 0.21rem;
            background-color: var(--color-gray-light16);
            content: '';
            clip-path: none;
          }
        }
      }

      &:checked + label::after {
        --_backgroundColor: var(--color-form-checkmark-selected);
      }

      &:focus-visible + label::before {
        outline: var(--size-border-small) solid var(--color-border-focus-dark);
      }
    }

    p {
      a {
        font-size: inherit;
      }
    }

    @include respond-above(tablet) {
      width: 100%;
      clear: both;
      display: inline-block;

      & > div {
        padding-left: calc(var(--size-spacing-base) * 1.25);
        padding-right: calc(var(--size-spacing-base) * 1.25);
      }

      .col {
        float: left;
        width: 50%;
      }

      .col1 {
        float: left;
        width: 33.33%;
      }
    }
  }

  .bcbst-html-block & {
    &[name="forgotpasswordctrl"] {
      padding: 0;

      .emr-form-column {
        margin-bottom: calc(var(--size-spacing-base) * 3.125);
  
        @include respond-above(tablet) {
          margin-bottom: calc(var(--size-spacing-base) * 4.375);
        }
      }
  
      .emr-input-column {
        @include respond-above(tablet) {
          max-width: rem-calc(292);
        }
      }
    }
  }
 
  input[id="hpot"] {
    display: none;
  }
}
